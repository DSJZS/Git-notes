忽略文件 -- .gitignore
一般我们总会有些文件无需纳入 Git 的管理，也不希望它们总出现在未跟踪文件列表。通常都是些自动生成的文件，比如日志文件，或者编译过程中创建的临时文件等。我们可以创建一个名为 .gitignore 的文件，列出要忽略的文件模式。

命令总结(非全部命令)
命令
|
|
|										作用
git config --global user.name 用户名					为计算机上的每个存储库设置 Git 用户名签名(可能是非真实的，只是标注)
git config  user.name 用户名						为一个仓库设置 Git 用户名签名(可能是非真实的，只是标注)
git config --global user.email 邮箱					为计算机上的每个存储库设置 Git 邮箱签名(可能是非真实的，只是标注)
git config  user.email 邮箱						为一个仓库设置 Git 用户名签名(可能是非真实的，只是标注)
|
|
|
git init									初始化新仓库
|
|
|
git clone [仓库网址]							克隆[仓库网址]处的仓库
|
|
|
git status									(可指定文件) 检查当前文件状态
git diff									(可指定文件) 比较工作目录中当前文件和暂存区域快照之间的差异，也就是修改之后还没有暂存起来的变化    	-----									内容
git diff --cached								(可指定文件) 看已经暂存起来的文件和上次提交时的快照之间的差异
|
|
|
git add									(可指定文件) 这是个多功能命令，根据目标文件的状态不同，此命令的效果也不同：可以用它开始跟踪新文    	-----									件，或者把已跟踪的文件放到暂存区，还能用于合并时把有冲突的文件标记为已解决状态等
git commit									(可指定文件) 提交暂存区文件到本地库(会启动文本编辑器以便输入本次提交的说明)
git commit -m "日志信息"						(可指定文件) 提交暂存区文件到本地库，并提交日志信息说明
git commit -a -m "日志信息"						(可指定文件) 暂存已经跟踪过的文件并提交到本地库，并提交日志信息说明
|
|
|
git rm 文件名								将从 Git 中移除某个文件的操作放入暂存库 (同时如果该文件在本地存在，删除它)
git rm -f 文件名								强制 将从 Git 中移除某个文件的操作放入暂存库 (同时如果该文件在本地存在，删除它)
	-----									( 用于 删除之前修改过并且已经放到暂存区域 等情况 )
 git rm --cached 文件名 							将从 Git 中移除某个文件的操作放入暂存库 或者 将某个文件从 Git暂存区 移出 (均不会删除本地文件)
|
|
|
git mv 文件本名 文件改名							在 Git 中对文件改名 (影响本地和Git)
(pro git 中描述,上述命令等同于下面三行，如此分开操作，Git 也会意识到这是一次改名)
$ mv README.txt README
$ git rm README.txt
$ git add README
|
|
|
git log									查看提交历史
git log -p -n									查看最近 n 次提交的历史
git log --stat								查看提交历史( 仅显示简要的增改行数统计 )
get log --pretty=xxx							xxx 为 oneline一行显示 short精简显示 full详细显示 fuller超详细显示 用对应的非常规模式查看提交历史
git log --pretty=format:"占位符列表"					定制要显示的记录格式输出提交历史( 占位符看 附录1 文件 )
*注意：用 oneline 或 format 时结合 --graph 选项，可以看到开头多出一些 ASCII 字符串表示的简单图形，形象地展示了每个提交所在的分支及其分化衍合情况。
*注意：以上只是简单介绍了一些 git log 命令支持的选项。附录2 文件 还列出了一些其他常用的选项及其释义。
|
|
|